package com.icodelt.geradorqrcode

import android.graphics.Bitmap
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.size
import androidx.compose.material3.Button
import androidx.compose.material3.Icon
import androidx.compose.material3.Text
import androidx.compose.material3.TextField
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.asImageBitmap
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.input.TextFieldValue
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import com.google.zxing.BarcodeFormat
import com.google.zxing.qrcode.QRCodeWriter

@Composable
fun QRCodeApp() {

    var textValue by remember {
        mutableStateOf(TextFieldValue(""))
    }

    var qrCodeGenerated by remember {
        mutableStateOf<Bitmap?>(null)
    }

    Column(
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.SpaceEvenly
    ) {

        Column(
            horizontalAlignment = Alignment.CenterHorizontally
        ) {

            Text(
                text = "Gerador de QR Code",
                textAlign = TextAlign.Center
            )

            Spacer(modifier = Modifier.size(16.dp))

            if (qrCodeGenerated != null) {
                Image(
                    bitmap = qrCodeGenerated!!.asImageBitmap(),
                    contentDescription = "",
                    modifier = Modifier.size(220.dp)
                )
            } else {
                Icon(
                    painter = painterResource(id = R.drawable.qr_code_scanner_24px),
                    contentDescription = "",
                    modifier = Modifier.size(220.dp)
                )
            }
        }

        TextField(
            label = {
                    Text(text = "Digite um texto")
            },
            value = textValue,
            onValueChange = {
            textValue = it
        })

        Spacer(modifier = Modifier.height(20.dp))

        Button(
            onClick = {
                qrCodeGenerated = generateQRCode(textValue.text)
            },
            enabled = textValue.text.isNotEmpty()
        ) {
            Text(text = "Gerar QR Code")
        }
    }
}

fun generateQRCode(text: String) : Bitmap {

    val matrix = QRCodeWriter().encode(text, BarcodeFormat.QR_CODE, 512, 512)
    val width = matrix.width
    val height = matrix.height

    val bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.RGB_565)

    for (y in 0 until height) {
        for (x in 0 until width) {
            bitmap.setPixel(x, y, if (matrix.get(x, y)) android.graphics.Color.BLACK else android.graphics.Color.WHITE)
        }
    }

    return bitmap
}